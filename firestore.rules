rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data within their user document
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for the global tickets collection
    match /tickets/{ticketId} {
      // Allow any authenticated user to create a ticket, but they must be the requester.
      allow create: if request.auth != null && request.resource.data.requesterUid == request.auth.uid;

      // Allow the user who created the ticket to read it.
      // Also allow any user from the admin company to read it.
      // The exists() check ensures we don't allow reads on non-existent admin company docs.
      allow read: if request.auth != null && (
                    resource.data.requesterUid == request.auth.uid ||
                    exists(/databases/$(database)/documents/users/$(request.auth.uid)/companies/$(resource.data.requesterCompanyId)) // This is a placeholder, real rule below
                  );

      // Allow only users from the admin company to update tickets (e.g., change status).
      allow update: if request.auth != null && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)/companies/$(request.resource.data.requesterCompanyId)).data.cnpj == '00000000000000';
      
      // Allow only users from the admin company to delete tickets.
      allow delete: if request.auth != null && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)/companies/$(resource.data.requesterCompanyId)).data.cnpj == '00000000000000';
    }
  }
}
